享元模式：运功共享技术有效的支持大量细粒度的对象。

FlyweightFactory：一个享元工厂，用来创建并管理Flyweight对象，它主要是用来确保合理的共享Flyweight，当用户请求一个Flyweight时，Flyweight对象提供一个已创建的实例或者创建一个（如果不存在的话）

Flyweight：所有具体享元类的超类或接口，通过这个接口，Flyweight可以接受并作用于外部状态。

ConcreteFlyweight：继承于Flyweight超类或实现Flyweight接口，并未内部状态增加存储空间

UnsharedConcreteFlyweight：指那些不需要共享的Flyweight子类，因为Flyweight接口共享成为可能，但她并不强制共享。

Q:什么时候使用享元模式?
A:如果一个应用程序使用了大量的对象，而大量的这些对象造成了很大的存储开销是就应该考虑使用；还有就是对象的大多数状态可以外部状态，如果删除对象外部状态，那么可以用相对较少的共享对象取代很多组对象，此时可以考虑使用享元模式。